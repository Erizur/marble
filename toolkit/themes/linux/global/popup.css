/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 @namespace url("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul");
 @namespace html url("http://www.w3.org/1999/xhtml");
 /* ::::: menupopup ::::: */
 menupopup,
 panel {
   min-width: 1px;
   --panel-padding-block: max(0px, var(--panel-border-radius) / 2 - 1px);
   --panel-padding: var(--panel-padding-block) 0;
   --panel-color: MenuText;
   --panel-background: Menu;
   --panel-border-radius: 8px;
   --panel-border-color: ThreeDShadow;
   --panel-width: initial;
   --panel-shadow: 0 0 var(--panel-shadow-margin) hsla(0,0%,0%,.2);
   /* To account for the box-shadow below */
   --panel-shadow-margin: 4px;
   margin: calc(-1 * var(--panel-shadow-margin));
   -moz-window-input-region-margin: var(--panel-shadow-margin);
 }
 menupopup {
   /* Also apply the padding in the inline axis for menus */
   --panel-padding: var(--panel-padding-block);
 }
 @media (prefers-contrast) {
   menupopup,
   panel {
     --panel-border-color: color-mix(in srgb, currentColor 60%, transparent);
   }
 }
 menupopup > menu > menupopup {
   /* Vertically align nested menupopups: the shadow plus the top padding */
   margin-top: calc(-1 * (var(--panel-shadow-margin) + var(--panel-padding-block)));
 }
 /* ::::: arrow panel ::::: */
 :is(panel, menupopup)[type="arrow"] {
   border: none;
   background-color: transparent;
 }
 :is(panel, menupopup)::part(content) {
   display: flex;
   box-sizing: border-box;
   padding: var(--panel-padding);
   color: var(--panel-color);
   background: var(--panel-background);
   border-radius: var(--panel-border-radius);
   border: 1px solid var(--panel-border-color);
   width: var(--panel-width);
   min-width: 0;
   min-height: 0;
   /* Makes popup constraints work */
   max-height: calc(100% - 2 * var(--panel-shadow-margin));
   max-width: calc(100% - 2 * var(--panel-shadow-margin));
   box-shadow: var(--panel-shadow);
   margin: var(--panel-shadow-margin);
 }
 :is(panel, menupopup)[orient=vertical]::part(content) {
   flex-direction: column;
 }
 panel[type="arrow"].panel-no-padding::part(content) {
   padding: 0;
   overflow: hidden; /* Don't let panel content overflow the border */
 }
 /* rules for popups associated with menulists */
 menulist > menupopup {
   padding: 0;
   min-width: 0;
 }

/* ::::: panel animations ::::: */

.animatable-menupopup,
panel[type="arrow"] {
  transition-timing-function: var(--animation-easing-function), ease-out;

  @media (-moz-panel-animations) and (prefers-reduced-motion: no-preference) {
    &:not([animate="false"]) {
      transition-duration: 0.18s;
    }
  }

  @media not (-moz-platform: macos) {
    transition-property: transform, opacity;
    will-change: transform, opacity;
    opacity: 0;
    transform: translateY(-70px);

    &[side="bottom"] {
      transform: translateY(70px);
    }
  }

  /* On Mac, use the properties "-moz-window-transform" and "-moz-window-opacity"
   * instead of "transform" and "opacity" for these animations.
   * The -moz-window* properties apply to the whole window including the
   * window's shadow, and they don't affect the window's "shape", so the
   * system doesn't have to recompute the shadow shape during the animation.
   * This makes them a lot faster. These properties are not implemented on
   * other platforms.
   */
  @media (-moz-platform: macos) {
    transition-property: -moz-window-transform, -moz-window-opacity;
    /* Only do the fade-in animation on pre-Big Sur to avoid missing shadows on
     * Big Sur, see bug 1672091. */
    @media not (-moz-mac-big-sur-theme) {
      -moz-window-opacity: 0;
      -moz-window-transform: translateY(-70px);

      &[side="bottom"] {
        -moz-window-transform: translateY(70px);
      }
    }
    /* If the @media rule above is removed, then we can also remove this */
    &[animate="cancel"] {
      -moz-window-opacity: 0;
    }
  }

  &[animate="cancel"] {
    -moz-window-transform: none;
    transform: none;
  }

  &:is([animate="false"], [animate="open"]) {
    opacity: 1;
    transform: none;
    -moz-window-opacity: 1;
    -moz-window-transform: none;
    transition-timing-function: var(--animation-easing-function), ease-in-out;
  }

  &[animating] {
    pointer-events: none;
  }
}